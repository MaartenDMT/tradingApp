2023-09-27 12:03:19 - model - INFO - Starting loading the models
2023-09-27 12:03:19 - model - INFO - loading the Main view model
2023-09-27 12:03:19 - model - INFO - loading the Trade tab model
2023-09-27 12:03:19 - model - INFO - loading the Exchange tab model
2023-09-27 12:03:19 - model - INFO - loading the Bot tab model
2023-09-27 12:03:19 - model - INFO - loading the Chart tab model
2023-09-27 12:03:19 - model - INFO - Finished loading the models
2023-09-27 12:03:24 - model - INFO - machine learning model Linear Regression selected
2023-09-27 12:06:02 - model - INFO - BayesSearchCV(cv=5, estimator=LinearRegression(), scoring=make_scorer(<lambda>),
              search_spaces={'copy_X': [True, False],
                             'fit_intercept': [True, False],
                             'n_jobs': [-1, 1]})
2023-09-27 12:06:02 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 12:06:02 - model - INFO - Model training successful.
2023-09-27 12:06:02 - model - INFO - the custom: parallelize search best params are OrderedDict([('copy_X', True), ('fit_intercept', False), ('n_jobs', 1)])
2023-09-27 12:06:02 - model - INFO - the custom: parallelize search best score is 5448.617999999913
2023-09-27 12:06:02 - model - INFO - the custom: parallelize search best estimator is BayesSearchCV(cv=5, estimator=LinearRegression(), scoring=make_scorer(<lambda>),
              search_spaces={'copy_X': [True, False],
                             'fit_intercept': [True, False],
                             'n_jobs': [-1, 1]})
2023-09-27 12:06:02 - model - INFO - R2 Score: -6138444.465010753
2023-09-27 12:06:02 - model - INFO - Mean Absolute Error: 55324.41917739019
2023-09-27 12:06:02 - model - INFO - Mean Squared Error: 108257457856683.17
2023-09-27 12:06:02 - model - INFO - Root Mean Squared Error: 10404684.41888956
2023-09-27 12:06:02 - model - INFO - Explained Variance Score: -6138270.9111402305
2023-09-27 12:06:02 - model - INFO - The Linear Regression model has been trained, evaluated -6138444.465010753, and saved.
2023-09-27 12:07:42 - model - INFO - machine learning model Ridge Regression selected
2023-09-27 12:27:43 - model - INFO - Starting loading the models
2023-09-27 12:27:43 - model - INFO - loading the Main view model
2023-09-27 12:27:43 - model - INFO - loading the Trade tab model
2023-09-27 12:27:43 - model - INFO - loading the Exchange tab model
2023-09-27 12:27:43 - model - INFO - loading the Bot tab model
2023-09-27 12:27:43 - model - INFO - loading the Chart tab model
2023-09-27 12:27:43 - model - INFO - Finished loading the models
2023-09-27 12:27:48 - model - INFO - machine learning model Linear Regression selected
2023-09-27 12:28:34 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 12:28:34 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 12:28:34 - model - INFO - Model training successful.
2023-09-27 12:28:34 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': False, 'n_jobs': -1}
2023-09-27 12:28:34 - model - INFO - the custom: parallelize search best score is -1137.9331200000001
2023-09-27 12:28:34 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 12:28:34 - model - INFO - R2 Score: -5.853302130429714
2023-09-27 12:28:34 - model - INFO - Mean Absolute Error: 11090.293516632732
2023-09-27 12:28:34 - model - INFO - Mean Squared Error: 123239179.55531882
2023-09-27 12:28:34 - model - INFO - Root Mean Squared Error: 11101.314316571656
2023-09-27 12:28:34 - model - INFO - Explained Variance Score: 0.9863995597267906
2023-09-27 12:28:34 - model - INFO - The Linear Regression model has been trained, evaluated -5.853302130429714, and saved.
2023-09-27 12:31:50 - model - INFO - machine learning model Linear Regression selected
2023-09-27 12:32:36 - model - INFO - RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 12:32:36 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 12:32:36 - model - INFO - Model training successful.
2023-09-27 12:32:36 - model - INFO - the custom: parallelize search best params are {'n_jobs': -1, 'fit_intercept': False, 'copy_X': True}
2023-09-27 12:32:36 - model - INFO - the custom: parallelize search best score is -33.05255999999961
2023-09-27 12:32:36 - model - INFO - the custom: parallelize search best estimator is RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 12:32:36 - model - INFO - R2 Score: -5.714713070964017
2023-09-27 12:32:36 - model - INFO - Mean Absolute Error: 11092.125273897504
2023-09-27 12:32:36 - model - INFO - Mean Squared Error: 123127485.15824242
2023-09-27 12:32:36 - model - INFO - Root Mean Squared Error: 11096.282492719913
2023-09-27 12:32:36 - model - INFO - Explained Variance Score: 0.9949696121203354
2023-09-27 12:32:36 - model - INFO - The Linear Regression model has been trained, evaluated -5.714713070964017, and saved.
2023-09-27 12:33:06 - model - INFO - machine learning model Logistic Regression selected
2023-09-27 12:33:07 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 12:46:13 - model - INFO - BayesSearchCV(cv=5, estimator=LogisticRegression(),
              scoring=make_scorer(<lambda>),
              search_spaces={'C': array([  0.1,   1. ,  10. , 100. ]),
                             'max_iter': array([1000, 1500]), 'penalty': ['l2'],
                             'solver': ['newton-cg', 'lbfgs', 'liblinear',
                                        'sag', 'saga'],
                             'tol': array([0.001     , 0.00464159, 0.02154435, 0.1       ])})
2023-09-27 12:46:13 - model - ERROR - Error saving feature importances to CSV: All arrays must be of the same length
2023-09-27 12:46:13 - model - INFO - Model training successful.
2023-09-27 12:46:13 - model - INFO - the custom: parallelize search best params are OrderedDict([('C', 0.1), ('max_iter', 1500), ('penalty', 'l2'), ('solver', 'sag'), ('tol', 0.1)])
2023-09-27 12:46:13 - model - INFO - the custom: parallelize search best score is 10.936000000000002
2023-09-27 12:46:13 - model - INFO - the custom: parallelize search best estimator is BayesSearchCV(cv=5, estimator=LogisticRegression(),
              scoring=make_scorer(<lambda>),
              search_spaces={'C': array([  0.1,   1. ,  10. , 100. ]),
                             'max_iter': array([1000, 1500]), 'penalty': ['l2'],
                             'solver': ['newton-cg', 'lbfgs', 'liblinear',
                                        'sag', 'saga'],
                             'tol': array([0.001     , 0.00464159, 0.02154435, 0.1       ])})
2023-09-27 12:46:14 - model - INFO - Accuracy: 0.4878951865565366
2023-09-27 12:46:14 - model - INFO - AUC-ROC: Not Applicable
2023-09-27 12:46:14 - model - INFO - Classification Report:
              precision    recall  f1-score   support

          -1       0.43      0.30      0.36      1368
           0       0.00      0.00      0.00       425
           1       0.51      0.75      0.61      1718

    accuracy                           0.49      3511
   macro avg       0.31      0.35      0.32      3511
weighted avg       0.42      0.49      0.44      3511

2023-09-27 12:46:14 - model - INFO - The Logistic Regression model has been trained, evaluated 0.4878951865565366, and saved.
2023-09-27 12:47:02 - model - INFO - machine learning model SVR selected
2023-09-27 12:47:09 - model - INFO - machine learning model Isolation Forest selected
2023-09-27 12:47:10 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 13:16:57 - model - INFO - Starting loading the models
2023-09-27 13:16:57 - model - INFO - loading the Main view model
2023-09-27 13:16:57 - model - INFO - loading the Trade tab model
2023-09-27 13:16:57 - model - INFO - loading the Exchange tab model
2023-09-27 13:16:57 - model - INFO - loading the Bot tab model
2023-09-27 13:16:57 - model - INFO - loading the Chart tab model
2023-09-27 13:16:57 - model - INFO - Finished loading the models
2023-09-27 13:17:04 - model - INFO - machine learning model SVR selected
2023-09-27 13:36:05 - model - INFO - machine learning model Ridge Regression selected
2023-09-27 13:55:02 - model - INFO - GridSearchCV(cv=5, estimator=Ridge(),
             param_grid={'alpha': array([1.00000000e-03, 1.58489319e-02, 2.51188643e-01, 3.98107171e+00,
       6.30957344e+01, 1.00000000e+03]),
                         'fit_intercept': [True, False],
                         'max_iter': array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000]),
                         'positive': [False],
                         'solver': ['auto', 'svd', 'cholesky', 'lsqr',
                                    'sparse_cg', 'sag', 'saga'],
                         'tol': array([0.001     , 0.00464159, 0.02154435, 0.1       ])},
             scoring=make_scorer(<lambda>))
2023-09-27 13:55:02 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 13:55:02 - model - INFO - Model training successful.
2023-09-27 13:55:02 - model - INFO - the custom: parallelize search best params are {'alpha': 1000.0, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'solver': 'sag', 'tol': 0.004641588833612777}
2023-09-27 13:55:02 - model - INFO - the custom: parallelize search best score is 40875.87962000002
2023-09-27 13:55:02 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=Ridge(),
             param_grid={'alpha': array([1.00000000e-03, 1.58489319e-02, 2.51188643e-01, 3.98107171e+00,
       6.30957344e+01, 1.00000000e+03]),
                         'fit_intercept': [True, False],
                         'max_iter': array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000]),
                         'positive': [False],
                         'solver': ['auto', 'svd', 'cholesky', 'lsqr',
                                    'sparse_cg', 'sag', 'saga'],
                         'tol': array([0.001     , 0.00464159, 0.02154435, 0.1       ])},
             scoring=make_scorer(<lambda>))
2023-09-27 13:55:02 - model - INFO - R2 Score: 0.9993156571133335
2023-09-27 13:55:02 - model - INFO - Mean Absolute Error: 70.03539547767795
2023-09-27 13:55:02 - model - INFO - Mean Squared Error: 12089.653989996077
2023-09-27 13:55:02 - model - INFO - Root Mean Squared Error: 109.95296262491556
2023-09-27 13:55:02 - model - INFO - Explained Variance Score: 0.9993160227109289
2023-09-27 13:55:02 - model - INFO - The Ridge Regression model has been trained, evaluated 0.9993156571133335, and saved.
2023-09-27 15:12:08 - model - INFO - Starting loading the models
2023-09-27 15:12:08 - model - INFO - loading the Main view model
2023-09-27 15:12:08 - model - INFO - loading the Trade tab model
2023-09-27 15:12:08 - model - INFO - loading the Exchange tab model
2023-09-27 15:12:08 - model - INFO - loading the Bot tab model
2023-09-27 15:12:08 - model - INFO - loading the Chart tab model
2023-09-27 15:12:08 - model - INFO - Finished loading the models
2023-09-27 15:12:13 - model - INFO - machine learning model Linear Regression selected
2023-09-27 15:12:48 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 15:12:48 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 15:12:48 - model - INFO - Model training successful.
2023-09-27 15:12:48 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': False, 'n_jobs': -1}
2023-09-27 15:12:48 - model - INFO - the custom: parallelize search best score is 231.28470000000038
2023-09-27 15:12:48 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 15:12:48 - model - INFO - R2 Score: -0.5864146724022654
2023-09-27 15:12:48 - model - INFO - Mean Absolute Error: 20463.262648889042
2023-09-27 15:12:48 - model - INFO - Mean Squared Error: 419686244.7019538
2023-09-27 15:12:48 - model - INFO - Root Mean Squared Error: 20486.245256316586
2023-09-27 15:12:48 - model - INFO - Explained Variance Score: 0.996442540467375
2023-09-27 15:12:48 - model - INFO - The Linear Regression model has been trained, evaluated -0.5864146724022654, and saved.
2023-09-27 15:19:31 - model - INFO - Starting loading the models
2023-09-27 15:19:31 - model - INFO - loading the Main view model
2023-09-27 15:19:31 - model - INFO - loading the Trade tab model
2023-09-27 15:19:31 - model - INFO - loading the Exchange tab model
2023-09-27 15:19:31 - model - INFO - loading the Bot tab model
2023-09-27 15:19:31 - model - INFO - loading the Chart tab model
2023-09-27 15:19:31 - model - INFO - Finished loading the models
2023-09-27 15:19:35 - model - INFO - machine learning model Linear Regression selected
2023-09-27 15:20:32 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 15:20:32 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 15:20:32 - model - INFO - Model training successful.
2023-09-27 15:20:32 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1}
2023-09-27 15:20:32 - model - INFO - the custom: parallelize search best score is 1002370.6805599995
2023-09-27 15:20:32 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 15:20:32 - model - INFO - R2 Score: 1.0
2023-09-27 15:20:32 - model - INFO - Mean Absolute Error: 7.696423154215522e-12
2023-09-27 15:20:32 - model - INFO - Mean Squared Error: 1.0279711726138988e-22
2023-09-27 15:20:32 - model - INFO - Root Mean Squared Error: 1.0138891323088037e-11
2023-09-27 15:20:32 - model - INFO - Explained Variance Score: 1.0
2023-09-27 15:20:33 - model - INFO - The Linear Regression model has been trained, evaluated 1.0, and saved.
2023-09-27 15:22:55 - model - INFO - Starting loading the models
2023-09-27 15:22:55 - model - INFO - loading the Main view model
2023-09-27 15:22:55 - model - INFO - loading the Trade tab model
2023-09-27 15:22:55 - model - INFO - loading the Exchange tab model
2023-09-27 15:22:55 - model - INFO - loading the Bot tab model
2023-09-27 15:22:55 - model - INFO - loading the Chart tab model
2023-09-27 15:22:55 - model - INFO - Finished loading the models
2023-09-27 15:23:01 - model - INFO - machine learning model Linear Regression selected
2023-09-27 15:23:53 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 15:23:53 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 15:23:53 - model - INFO - Model training successful.
2023-09-27 15:23:53 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': False, 'n_jobs': -1}
2023-09-27 15:23:53 - model - INFO - the custom: parallelize search best score is 392.4397800000008
2023-09-27 15:23:53 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 15:23:53 - model - INFO - R2 Score: -2.4259870087533453
2023-09-27 15:23:53 - model - INFO - Mean Absolute Error: 28367.76074770775
2023-09-27 15:23:53 - model - INFO - Mean Squared Error: 804790267.3762933
2023-09-27 15:23:53 - model - INFO - Root Mean Squared Error: 28368.82562561047
2023-09-27 15:23:53 - model - INFO - Explained Variance Score: 0.9997428029318786
2023-09-27 15:23:53 - model - INFO - The Linear Regression model has been trained, evaluated -2.4259870087533453, and saved.
2023-09-27 15:31:16 - model - INFO - machine learning model Linear Regression selected
2023-09-27 15:32:11 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 15:32:11 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 15:32:11 - model - INFO - Model training successful.
2023-09-27 15:32:11 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1}
2023-09-27 15:32:11 - model - INFO - the custom: parallelize search best score is 439555.92612000165
2023-09-27 15:32:11 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 15:32:11 - model - INFO - R2 Score: 1.0
2023-09-27 15:32:11 - model - INFO - Mean Absolute Error: 7.500512176246756e-12
2023-09-27 15:32:11 - model - INFO - Mean Squared Error: 1.0223245855340629e-22
2023-09-27 15:32:11 - model - INFO - Root Mean Squared Error: 1.0111006802163981e-11
2023-09-27 15:32:11 - model - INFO - Explained Variance Score: 1.0
2023-09-27 15:45:24 - model - INFO - Starting loading the models
2023-09-27 15:45:24 - model - INFO - loading the Main view model
2023-09-27 15:45:24 - model - INFO - loading the Trade tab model
2023-09-27 15:45:24 - model - INFO - loading the Exchange tab model
2023-09-27 15:45:24 - model - INFO - loading the Bot tab model
2023-09-27 15:45:24 - model - INFO - loading the Chart tab model
2023-09-27 15:45:24 - model - INFO - Finished loading the models
2023-09-27 15:45:31 - model - INFO - machine learning model Linear Regression selected
2023-09-27 15:46:24 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 15:46:24 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 15:46:24 - model - INFO - Model training successful.
2023-09-27 15:46:24 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1}
2023-09-27 15:46:24 - model - INFO - the custom: parallelize search best score is 223317.35117999968
2023-09-27 15:46:24 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 15:46:24 - model - INFO - R2 Score: 1.0
2023-09-27 15:46:24 - model - INFO - Mean Absolute Error: 1.5862489715201437e-11
2023-09-27 15:46:24 - model - INFO - Mean Squared Error: 3.7530398636452705e-22
2023-09-27 15:46:24 - model - INFO - Root Mean Squared Error: 1.9372764035225512e-11
2023-09-27 15:46:24 - model - INFO - Explained Variance Score: 1.0
2023-09-27 15:46:24 - model - INFO - The Linear Regression model has been trained, evaluated 1.0, and saved.
2023-09-27 15:54:30 - model - INFO - Starting loading the models
2023-09-27 15:54:30 - model - INFO - loading the Main view model
2023-09-27 15:54:30 - model - INFO - loading the Trade tab model
2023-09-27 15:54:30 - model - INFO - loading the Exchange tab model
2023-09-27 15:54:30 - model - INFO - loading the Bot tab model
2023-09-27 15:54:30 - model - INFO - loading the Chart tab model
2023-09-27 15:54:30 - model - INFO - Finished loading the models
2023-09-27 15:54:34 - model - INFO - machine learning model Linear Regression selected
2023-09-27 15:55:33 - model - INFO - RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 15:55:33 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 15:55:33 - model - INFO - Model training successful.
2023-09-27 15:55:33 - model - INFO - the custom: parallelize search best params are {'n_jobs': -1, 'fit_intercept': False, 'copy_X': True}
2023-09-27 15:55:33 - model - INFO - the custom: parallelize search best score is 2297.4916000000007
2023-09-27 15:55:33 - model - INFO - the custom: parallelize search best estimator is RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 15:55:33 - model - INFO - R2 Score: -2.414449964596219
2023-09-27 15:55:33 - model - INFO - Mean Absolute Error: 28374.53063134015
2023-09-27 15:55:33 - model - INFO - Mean Squared Error: 805468841.765641
2023-09-27 15:55:33 - model - INFO - Root Mean Squared Error: 28380.78296604308
2023-09-27 15:55:33 - model - INFO - Explained Variance Score: 0.9984957474570741
2023-09-27 15:55:33 - model - INFO - The Linear Regression model has been trained, evaluated -2.414449964596219, and saved.
2023-09-27 15:57:35 - model - INFO - Starting loading the models
2023-09-27 15:57:35 - model - INFO - loading the Main view model
2023-09-27 15:57:35 - model - INFO - loading the Trade tab model
2023-09-27 15:57:35 - model - INFO - loading the Exchange tab model
2023-09-27 15:57:35 - model - INFO - loading the Bot tab model
2023-09-27 15:57:35 - model - INFO - loading the Chart tab model
2023-09-27 15:57:35 - model - INFO - Finished loading the models
2023-09-27 15:57:39 - model - INFO - machine learning model Linear Regression selected
2023-09-27 15:58:33 - model - INFO - machine learning model Linear Regression selected
2023-09-27 15:58:42 - model - INFO - RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 15:58:42 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 15:58:42 - model - INFO - Model training successful.
2023-09-27 15:58:42 - model - INFO - the custom: parallelize search best params are {'n_jobs': -1, 'fit_intercept': True, 'copy_X': True}
2023-09-27 15:58:42 - model - INFO - the custom: parallelize search best score is 372507.04172000015
2023-09-27 15:58:42 - model - INFO - the custom: parallelize search best estimator is RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 15:58:43 - model - INFO - R2 Score: 1.0
2023-09-27 15:58:43 - model - INFO - Mean Absolute Error: 1.941707845243826e-11
2023-09-27 15:58:43 - model - INFO - Mean Squared Error: 5.804174292783956e-22
2023-09-27 15:58:43 - model - INFO - Root Mean Squared Error: 2.4091854002512873e-11
2023-09-27 15:58:43 - model - INFO - Explained Variance Score: 1.0
2023-09-27 15:58:43 - model - INFO - The Linear Regression model has been trained, evaluated 1.0, and saved.
2023-09-27 15:59:30 - model - INFO - RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 15:59:30 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 15:59:30 - model - INFO - Model training successful.
2023-09-27 15:59:30 - model - INFO - the custom: parallelize search best params are {'n_jobs': -1, 'fit_intercept': False, 'copy_X': True}
2023-09-27 15:59:30 - model - INFO - the custom: parallelize search best score is -5582.115119999997
2023-09-27 15:59:30 - model - INFO - the custom: parallelize search best estimator is RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 15:59:30 - model - INFO - R2 Score: -2.3690179714845234
2023-09-27 15:59:30 - model - INFO - Mean Absolute Error: 28378.680479998267
2023-09-27 15:59:30 - model - INFO - Mean Squared Error: 805781311.2854439
2023-09-27 15:59:30 - model - INFO - Root Mean Squared Error: 28386.287381153667
2023-09-27 15:59:30 - model - INFO - Explained Variance Score: 0.9981945963898711
2023-09-27 15:59:30 - model - INFO - The Linear Regression model has been trained, evaluated -2.3690179714845234, and saved.
2023-09-27 16:01:21 - model - INFO - Starting loading the models
2023-09-27 16:01:21 - model - INFO - loading the Main view model
2023-09-27 16:01:21 - model - INFO - loading the Trade tab model
2023-09-27 16:01:21 - model - INFO - loading the Exchange tab model
2023-09-27 16:01:21 - model - INFO - loading the Bot tab model
2023-09-27 16:01:21 - model - INFO - loading the Chart tab model
2023-09-27 16:01:21 - model - INFO - Finished loading the models
2023-09-27 16:01:26 - model - INFO - machine learning model Linear Regression selected
2023-09-27 16:02:23 - model - INFO - RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 16:02:23 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 16:02:23 - model - INFO - Model training successful.
2023-09-27 16:02:23 - model - INFO - the custom: parallelize search best params are {'n_jobs': -1, 'fit_intercept': True, 'copy_X': True}
2023-09-27 16:02:23 - model - INFO - the custom: parallelize search best score is 214959.90070000035
2023-09-27 16:02:23 - model - INFO - the custom: parallelize search best estimator is RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 16:02:23 - model - INFO - R2 Score: 1.0
2023-09-27 16:02:23 - model - INFO - Mean Absolute Error: 1.7618936566356128e-11
2023-09-27 16:02:23 - model - INFO - Mean Squared Error: 4.555548924953348e-22
2023-09-27 16:02:23 - model - INFO - Root Mean Squared Error: 2.134373192521249e-11
2023-09-27 16:02:23 - model - INFO - Explained Variance Score: 1.0
2023-09-27 16:02:23 - model - INFO - The Linear Regression model has been trained, evaluated 1.0, and saved.
2023-09-27 16:12:02 - model - INFO - Starting loading the models
2023-09-27 16:12:02 - model - INFO - loading the Main view model
2023-09-27 16:12:02 - model - INFO - loading the Trade tab model
2023-09-27 16:12:02 - model - INFO - loading the Exchange tab model
2023-09-27 16:12:02 - model - INFO - loading the Bot tab model
2023-09-27 16:12:02 - model - INFO - loading the Chart tab model
2023-09-27 16:12:02 - model - INFO - Finished loading the models
2023-09-27 16:12:09 - model - INFO - machine learning model Linear Regression selected
2023-09-27 16:13:08 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 16:13:08 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 16:13:08 - model - INFO - Model training successful.
2023-09-27 16:13:08 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': False, 'n_jobs': -1}
2023-09-27 16:13:08 - model - INFO - the custom: parallelize search best score is -213.01056000000145
2023-09-27 16:13:08 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 16:13:08 - model - INFO - R2 Score: -2.340364110812554
2023-09-27 16:13:08 - model - INFO - Mean Absolute Error: 28370.495457509398
2023-09-27 16:13:08 - model - INFO - Mean Squared Error: 804953207.059851
2023-09-27 16:13:08 - model - INFO - Root Mean Squared Error: 28371.697289021165
2023-09-27 16:13:08 - model - INFO - Explained Variance Score: 0.9997170088359858
2023-09-27 16:13:08 - model - INFO - The Linear Regression model has been trained, evaluated -2.340364110812554, and saved.
2023-09-27 16:14:13 - model - INFO - machine learning model Linear Regression selected
2023-09-27 16:15:10 - model - INFO - RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 16:15:10 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 16:15:10 - model - INFO - Model training successful.
2023-09-27 16:15:10 - model - INFO - the custom: parallelize search best params are {'n_jobs': -1, 'fit_intercept': True, 'copy_X': True}
2023-09-27 16:15:10 - model - INFO - the custom: parallelize search best score is 885801.3541799996
2023-09-27 16:15:10 - model - INFO - the custom: parallelize search best estimator is RandomizedSearchCV(cv=5, estimator=LinearRegression(),
                   param_distributions={'copy_X': [True, False],
                                        'fit_intercept': [True, False],
                                        'n_jobs': [-1, 1]},
                   scoring=make_scorer(<lambda>))
2023-09-27 16:15:11 - model - INFO - R2 Score: 1.0
2023-09-27 16:15:11 - model - INFO - Mean Absolute Error: 8.48636656635926e-12
2023-09-27 16:15:11 - model - INFO - Mean Squared Error: 1.2644031131399595e-22
2023-09-27 16:15:11 - model - INFO - Root Mean Squared Error: 1.1244568080366447e-11
2023-09-27 16:15:11 - model - INFO - Explained Variance Score: 1.0
2023-09-27 16:15:11 - model - INFO - The Linear Regression model has been trained, evaluated 1.0, and saved.
2023-09-27 16:15:43 - model - INFO - machine learning model Ridge Regression selected
2023-09-27 16:57:17 - model - INFO - machine learning model Lasso Regression selected
2023-09-27 16:58:09 - model - INFO - Starting loading the models
2023-09-27 16:58:09 - model - INFO - loading the Main view model
2023-09-27 16:58:09 - model - INFO - loading the Trade tab model
2023-09-27 16:58:09 - model - INFO - loading the Exchange tab model
2023-09-27 16:58:09 - model - INFO - loading the Bot tab model
2023-09-27 16:58:09 - model - INFO - loading the Chart tab model
2023-09-27 16:58:09 - model - INFO - Finished loading the models
2023-09-27 17:06:50 - model - INFO - machine learning model Lasso Regression selected
2023-09-27 17:23:56 - model - INFO - Starting loading the models
2023-09-27 17:23:56 - model - INFO - loading the Main view model
2023-09-27 17:23:56 - model - INFO - loading the Trade tab model
2023-09-27 17:23:56 - model - INFO - loading the Exchange tab model
2023-09-27 17:23:56 - model - INFO - loading the Bot tab model
2023-09-27 17:23:56 - model - INFO - loading the Chart tab model
2023-09-27 17:23:56 - model - INFO - Finished loading the models
2023-09-27 17:24:00 - model - INFO - machine learning model Linear Regression selected
2023-09-27 17:24:15 - model - INFO - machine learning model SVR selected
2023-09-27 17:24:19 - model - INFO - machine learning model Ridge Regression selected
2023-09-27 17:24:21 - model - INFO - machine learning model Lasso Regression selected
2023-09-27 17:24:23 - model - INFO - machine learning model Elastic Net Regression selected
2023-09-27 17:24:24 - model - INFO - machine learning model Decision Tree Regressor selected
2023-09-27 17:24:26 - model - INFO - machine learning model Bayesian Ridge Regression selected
2023-09-27 17:24:29 - model - ERROR - Model training failed: Invalid dimension [None, array([2, 3, 4])]. Read the documentation for supported types.
2023-09-27 17:25:48 - model - INFO - Starting loading the models
2023-09-27 17:25:48 - model - INFO - loading the Main view model
2023-09-27 17:25:48 - model - INFO - loading the Trade tab model
2023-09-27 17:25:48 - model - INFO - loading the Exchange tab model
2023-09-27 17:25:48 - model - INFO - loading the Bot tab model
2023-09-27 17:25:48 - model - INFO - loading the Chart tab model
2023-09-27 17:25:48 - model - INFO - Finished loading the models
2023-09-27 17:25:52 - model - INFO - machine learning model Linear Regression selected
2023-09-27 17:25:55 - model - INFO - machine learning model Ridge Regression selected
2023-09-27 17:25:57 - model - INFO - machine learning model Lasso Regression selected
2023-09-27 17:26:01 - model - INFO - machine learning model Elastic Net Regression selected
2023-09-27 17:26:03 - model - INFO - machine learning model Decision Tree Regressor selected
2023-09-27 17:26:06 - model - ERROR - Model training failed: Invalid dimension [None, array([2, 3, 4])]. Read the documentation for supported types.
2023-09-27 17:27:14 - model - INFO - Starting loading the models
2023-09-27 17:27:14 - model - INFO - loading the Main view model
2023-09-27 17:27:14 - model - INFO - loading the Trade tab model
2023-09-27 17:27:14 - model - INFO - loading the Exchange tab model
2023-09-27 17:27:14 - model - INFO - loading the Bot tab model
2023-09-27 17:27:14 - model - INFO - loading the Chart tab model
2023-09-27 17:27:14 - model - INFO - Finished loading the models
2023-09-27 17:27:26 - model - INFO - machine learning model Linear Regression selected
2023-09-27 17:28:16 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 17:28:16 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 17:28:16 - model - INFO - Model training successful.
2023-09-27 17:28:16 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': False, 'n_jobs': -1}
2023-09-27 17:28:16 - model - INFO - the custom: parallelize search best score is 23.503500000000006
2023-09-27 17:28:16 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-09-27 17:28:16 - model - INFO - R2 Score: -5.7920027112528825
2023-09-27 17:28:16 - model - INFO - Mean Absolute Error: 11078.936960092631
2023-09-27 17:28:16 - model - INFO - Mean Squared Error: 122781469.21474178
2023-09-27 17:28:16 - model - INFO - Root Mean Squared Error: 11080.679997849491
2023-09-27 17:28:16 - model - INFO - Explained Variance Score: 0.99786334664793
2023-09-27 17:28:16 - model - INFO - The Linear Regression model has been trained, evaluated -5.7920027112528825, and saved.
2023-09-27 17:28:20 - model - INFO - machine learning model Ridge Regression selected
2023-09-27 17:32:47 - model - INFO - machine learning model Lasso Regression selected
2023-09-27 17:33:16 - model - INFO - machine learning model Elastic Net Regression selected
2023-09-27 17:52:08 - model - INFO - GridSearchCV(cv=5, estimator=Ridge(),
             param_grid={'alpha': array([1.00000000e-03, 1.58489319e-02, 2.51188643e-01, 3.98107171e+00,
       6.30957344e+01, 1.00000000e+03]),
                         'fit_intercept': [True, False],
                         'max_iter': array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000]),
                         'positive': [False],
                         'solver': ['auto', 'svd', 'cholesky', 'lsqr',
                                    'sparse_cg', 'sag', 'saga'],
                         'tol': array([0.001     , 0.00464159, 0.02154435, 0.1       ])},
             scoring=make_scorer(<lambda>))
2023-09-27 17:52:08 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 17:52:08 - model - INFO - Model training successful.
2023-09-27 17:52:08 - model - INFO - the custom: parallelize search best params are {'alpha': 1000.0, 'fit_intercept': True, 'max_iter': 5000, 'positive': False, 'solver': 'sag', 'tol': 0.021544346900318832}
2023-09-27 17:52:08 - model - INFO - the custom: parallelize search best score is 49930.030300000006
2023-09-27 17:52:08 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=Ridge(),
             param_grid={'alpha': array([1.00000000e-03, 1.58489319e-02, 2.51188643e-01, 3.98107171e+00,
       6.30957344e+01, 1.00000000e+03]),
                         'fit_intercept': [True, False],
                         'max_iter': array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000]),
                         'positive': [False],
                         'solver': ['auto', 'svd', 'cholesky', 'lsqr',
                                    'sparse_cg', 'sag', 'saga'],
                         'tol': array([0.001     , 0.00464159, 0.02154435, 0.1       ])},
             scoring=make_scorer(<lambda>))
2023-09-27 17:52:08 - model - INFO - R2 Score: 0.9986918844906796
2023-09-27 17:52:08 - model - INFO - Mean Absolute Error: 68.9494565255694
2023-09-27 17:52:08 - model - INFO - Mean Squared Error: 23079.64883696721
2023-09-27 17:52:08 - model - INFO - Root Mean Squared Error: 151.91987637227464
2023-09-27 17:52:08 - model - INFO - Explained Variance Score: 0.9986938289193251
2023-09-27 17:52:08 - model - INFO - The Ridge Regression model has been trained, evaluated 0.9986918844906796, and saved.
2023-09-27 17:55:31 - model - INFO - Starting loading the models
2023-09-27 17:55:31 - model - INFO - loading the Main view model
2023-09-27 17:55:31 - model - INFO - loading the Trade tab model
2023-09-27 17:55:31 - model - INFO - loading the Exchange tab model
2023-09-27 17:55:31 - model - INFO - loading the Bot tab model
2023-09-27 17:55:31 - model - INFO - loading the Chart tab model
2023-09-27 17:55:31 - model - INFO - Finished loading the models
2023-09-27 17:57:02 - model - INFO - machine learning model Decision Tree Classifier selected
2023-09-27 17:57:03 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 17:58:10 - model - INFO - Starting loading the models
2023-09-27 17:58:10 - model - INFO - loading the Main view model
2023-09-27 17:58:10 - model - INFO - loading the Trade tab model
2023-09-27 17:58:10 - model - INFO - loading the Exchange tab model
2023-09-27 17:58:10 - model - INFO - loading the Bot tab model
2023-09-27 17:58:10 - model - INFO - loading the Chart tab model
2023-09-27 17:58:10 - model - INFO - Finished loading the models
2023-09-27 17:58:26 - model - INFO - machine learning model Decision Tree Classifier selected
2023-09-27 17:58:27 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 18:00:07 - model - INFO - BayesSearchCV(cv=5, estimator=DecisionTreeClassifier(),
              scoring=make_scorer(<lambda>),
              search_spaces={'criterion': ['gini', 'entropy'],
                             'max_depth': [3, 5, 10],
                             'min_samples_leaf': [1, 2, 3, 4, 5],
                             'min_samples_split': [3, 5, 10]})
2023-09-27 18:00:07 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 18:00:07 - model - INFO - Model training successful.
2023-09-27 18:00:07 - model - INFO - the custom: parallelize search best params are OrderedDict([('criterion', 'entropy'), ('max_depth', 3), ('min_samples_leaf', 5), ('min_samples_split', 10)])
2023-09-27 18:00:07 - model - INFO - the custom: parallelize search best score is 12.062000000000001
2023-09-27 18:00:07 - model - INFO - the custom: parallelize search best estimator is BayesSearchCV(cv=5, estimator=DecisionTreeClassifier(),
              scoring=make_scorer(<lambda>),
              search_spaces={'criterion': ['gini', 'entropy'],
                             'max_depth': [3, 5, 10],
                             'min_samples_leaf': [1, 2, 3, 4, 5],
                             'min_samples_split': [3, 5, 10]})
2023-09-27 18:00:07 - model - INFO - Accuracy: 0.47223013386499574
2023-09-27 18:00:07 - model - INFO - AUC-ROC: Not Applicable
2023-09-27 18:00:07 - model - INFO - Classification Report:
              precision    recall  f1-score   support

          -1       0.43      0.12      0.18      1404
           0       0.00      0.00      0.00       485
           1       0.48      0.92      0.63      1622

    accuracy                           0.47      3511
   macro avg       0.30      0.35      0.27      3511
weighted avg       0.39      0.47      0.36      3511

2023-09-27 18:00:07 - model - INFO - The Decision Tree Classifier model has been trained, evaluated 0.47223013386499574, and saved.
2023-09-27 18:01:52 - model - INFO - machine learning model Logistic Regression selected
2023-09-27 18:01:53 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 18:27:31 - model - INFO - machine learning model SGD Regressor selected
2023-09-27 18:29:17 - model - INFO - machine learning model Lasso Regression selected
2023-09-27 18:29:18 - model - INFO - machine learning model Elastic Net Regression selected
2023-09-27 18:29:21 - model - INFO - machine learning model Extra Tree Classifier selected
2023-09-27 18:29:23 - model - INFO - machine learning model Decision Tree Classifier selected
2023-09-27 18:29:25 - model - INFO - machine learning model AdaBoost Classifier selected
2023-09-27 18:29:27 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 18:29:28 - model - INFO - machine learning model Gaussian Naive Bayes selected
2023-09-27 18:29:29 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 18:29:32 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 18:29:34 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 18:35:12 - model - INFO - GridSearchCV(cv=5, estimator=GaussianNB(),
             param_grid={'var_smoothing': [1e-09, 1e-08, 1e-07]},
             scoring=make_scorer(<lambda>))
2023-09-27 18:35:12 - model - INFO - Model training successful.
2023-09-27 18:35:12 - model - INFO - the custom: parallelize search best params are {'var_smoothing': 1e-09}
2023-09-27 18:35:12 - model - INFO - the custom: parallelize search best score is 21.942
2023-09-27 18:35:12 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=GaussianNB(),
             param_grid={'var_smoothing': [1e-09, 1e-08, 1e-07]},
             scoring=make_scorer(<lambda>))
2023-09-27 18:35:12 - model - INFO - Accuracy: 0.19168328111649102
2023-09-27 18:35:12 - model - INFO - AUC-ROC: Not Applicable
2023-09-27 18:35:13 - model - INFO - Classification Report:
              precision    recall  f1-score   support

          -1       0.00      0.00      0.00      1381
           0       0.14      0.91      0.24       462
           1       0.53      0.15      0.24      1668

    accuracy                           0.19      3511
   macro avg       0.22      0.35      0.16      3511
weighted avg       0.27      0.19      0.14      3511

2023-09-27 18:35:16 - model - INFO - The Gaussian Naive Bayes model has been trained, evaluated 0.19168328111649102, and saved.
2023-09-27 18:37:10 - model - INFO - RandomizedSearchCV(cv=5, estimator=DecisionTreeClassifier(),
                   param_distributions={'criterion': ['gini', 'entropy'],
                                        'max_depth': [3, 5, 10],
                                        'min_samples_leaf': [1, 2, 3, 4, 5],
                                        'min_samples_split': [3, 5, 10]},
                   scoring=make_scorer(<lambda>))
2023-09-27 18:37:10 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 18:37:10 - model - INFO - Model training successful.
2023-09-27 18:37:10 - model - INFO - the custom: parallelize search best params are {'min_samples_split': 10, 'min_samples_leaf': 2, 'max_depth': 3, 'criterion': 'entropy'}
2023-09-27 18:37:10 - model - INFO - the custom: parallelize search best score is 12.018
2023-09-27 18:37:10 - model - INFO - the custom: parallelize search best estimator is RandomizedSearchCV(cv=5, estimator=DecisionTreeClassifier(),
                   param_distributions={'criterion': ['gini', 'entropy'],
                                        'max_depth': [3, 5, 10],
                                        'min_samples_leaf': [1, 2, 3, 4, 5],
                                        'min_samples_split': [3, 5, 10]},
                   scoring=make_scorer(<lambda>))
2023-09-27 18:37:10 - model - INFO - Accuracy: 0.46938194246653375
2023-09-27 18:37:10 - model - INFO - AUC-ROC: Not Applicable
2023-09-27 18:37:10 - model - INFO - Classification Report:
              precision    recall  f1-score   support

          -1       0.43      0.06      0.11      1419
           0       0.00      0.00      0.00       484
           1       0.47      0.97      0.63      1608

    accuracy                           0.47      3511
   macro avg       0.30      0.34      0.25      3511
weighted avg       0.39      0.47      0.34      3511

2023-09-27 18:37:13 - model - INFO - The Decision Tree Classifier model has been trained, evaluated 0.46938194246653375, and saved.
2023-09-27 18:38:17 - model - INFO - GridSearchCV(cv=5, estimator=ExtraTreeClassifier(),
             param_grid={'criterion': ['gini', 'entropy'],
                         'max_depth': [3, 4, 6, 8, 10],
                         'min_samples_leaf': [1, 2, 3, 4, 5],
                         'min_samples_split': [3, 4, 6, 8, 10]},
             scoring=make_scorer(<lambda>))
2023-09-27 18:38:17 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 18:38:17 - model - INFO - Model training successful.
2023-09-27 18:38:17 - model - INFO - the custom: parallelize search best params are {'criterion': 'gini', 'max_depth': 4, 'min_samples_leaf': 2, 'min_samples_split': 3}
2023-09-27 18:38:17 - model - INFO - the custom: parallelize search best score is 12.081999999999999
2023-09-27 18:38:17 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=ExtraTreeClassifier(),
             param_grid={'criterion': ['gini', 'entropy'],
                         'max_depth': [3, 4, 6, 8, 10],
                         'min_samples_leaf': [1, 2, 3, 4, 5],
                         'min_samples_split': [3, 4, 6, 8, 10]},
             scoring=make_scorer(<lambda>))
2023-09-27 18:38:18 - model - INFO - Accuracy: 0.46482483622899456
2023-09-27 18:38:18 - model - INFO - AUC-ROC: Not Applicable
2023-09-27 18:38:18 - model - INFO - Classification Report:
              precision    recall  f1-score   support

          -1       0.43      0.01      0.01      1401
           0       0.00      0.00      0.00       476
           1       0.47      0.99      0.63      1634

    accuracy                           0.46      3511
   macro avg       0.30      0.33      0.22      3511
weighted avg       0.39      0.46      0.30      3511

2023-09-27 18:38:18 - model - INFO - The Extra Tree Classifier model has been trained, evaluated 0.46482483622899456, and saved.
2023-09-27 18:44:42 - model - INFO - machine learning model Extra Tree Classifier selected
2023-09-27 18:44:43 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 18:44:47 - model - INFO - machine learning model Decision Tree Classifier selected
2023-09-27 18:44:48 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 18:44:51 - model - INFO - machine learning model K-Nearest Neighbors selected
2023-09-27 18:44:53 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 18:49:00 - model - INFO - GridSearchCV(cv=5, estimator=ExtraTreeClassifier(),
             param_grid={'criterion': ['gini', 'entropy'],
                         'max_depth': [3, 4, 6, 8, 10],
                         'min_samples_leaf': [1, 2, 3, 4, 5],
                         'min_samples_split': [3, 4, 6, 8, 10]},
             scoring=make_scorer(<lambda>))
2023-09-27 18:49:00 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 18:49:00 - model - INFO - Model training successful.
2023-09-27 18:49:00 - model - INFO - the custom: parallelize search best params are {'criterion': 'entropy', 'max_depth': 4, 'min_samples_leaf': 1, 'min_samples_split': 3}
2023-09-27 18:49:00 - model - INFO - the custom: parallelize search best score is 11.959999999999999
2023-09-27 18:49:00 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=ExtraTreeClassifier(),
             param_grid={'criterion': ['gini', 'entropy'],
                         'max_depth': [3, 4, 6, 8, 10],
                         'min_samples_leaf': [1, 2, 3, 4, 5],
                         'min_samples_split': [3, 4, 6, 8, 10]},
             scoring=make_scorer(<lambda>))
2023-09-27 18:49:00 - model - INFO - Accuracy: 0.4819139846197664
2023-09-27 18:49:00 - model - INFO - AUC-ROC: Not Applicable
2023-09-27 18:49:00 - model - INFO - Classification Report:
              precision    recall  f1-score   support

          -1       0.50      0.08      0.14      1393
           0       0.00      0.00      0.00       460
           1       0.48      0.95      0.64      1658

    accuracy                           0.48      3511
   macro avg       0.33      0.34      0.26      3511
weighted avg       0.42      0.48      0.36      3511

2023-09-27 18:49:01 - model - INFO - The Extra Tree Classifier model has been trained, evaluated 0.4819139846197664, and saved.
2023-09-27 18:49:37 - model - INFO - RandomizedSearchCV(cv=5, estimator=DecisionTreeClassifier(),
                   param_distributions={'criterion': ['gini', 'entropy'],
                                        'max_depth': [3, 5, 10],
                                        'min_samples_leaf': [1, 2, 3, 4, 5],
                                        'min_samples_split': [3, 5, 10]},
                   scoring=make_scorer(<lambda>))
2023-09-27 18:49:37 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-09-27 18:49:37 - model - INFO - Model training successful.
2023-09-27 18:49:37 - model - INFO - the custom: parallelize search best params are {'min_samples_split': 5, 'min_samples_leaf': 4, 'max_depth': 3, 'criterion': 'entropy'}
2023-09-27 18:49:37 - model - INFO - the custom: parallelize search best score is 11.808
2023-09-27 18:49:37 - model - INFO - the custom: parallelize search best estimator is RandomizedSearchCV(cv=5, estimator=DecisionTreeClassifier(),
                   param_distributions={'criterion': ['gini', 'entropy'],
                                        'max_depth': [3, 5, 10],
                                        'min_samples_leaf': [1, 2, 3, 4, 5],
                                        'min_samples_split': [3, 5, 10]},
                   scoring=make_scorer(<lambda>))
2023-09-27 18:49:38 - model - INFO - Accuracy: 0.45912845343207065
2023-09-27 18:49:38 - model - INFO - AUC-ROC: Not Applicable
2023-09-27 18:49:38 - model - INFO - Classification Report:
              precision    recall  f1-score   support

          -1       0.40      0.09      0.14      1440
           0       0.00      0.00      0.00       470
           1       0.46      0.93      0.62      1601

    accuracy                           0.46      3511
   macro avg       0.29      0.34      0.25      3511
weighted avg       0.38      0.46      0.34      3511

2023-09-27 18:49:38 - model - INFO - The Decision Tree Classifier model has been trained, evaluated 0.45912845343207065, and saved.
2023-09-27 19:00:45 - model - INFO - GridSearchCV(cv=5, estimator=AdaBoostClassifier(),
             param_grid={'algorithm': ['SAMME', 'SAMME.R'],
                         'learning_rate': array([1.00000000e-03, 2.15443469e-02, 4.64158883e-01, 1.00000000e+01]),
                         'n_estimators': array([ 10,  60, 110, 160, 210, 260])},
             scoring=make_scorer(<lambda>))
2023-09-27 19:00:45 - model - ERROR - Error saving feature importances to CSV: All arrays must be of the same length
2023-09-27 19:00:45 - model - INFO - Model training successful.
2023-09-27 19:00:45 - model - INFO - the custom: parallelize search best params are {'algorithm': 'SAMME.R', 'learning_rate': 10.0, 'n_estimators': 160}
2023-09-27 19:00:45 - model - INFO - the custom: parallelize search best score is 23.398000000000003
2023-09-27 19:00:45 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=AdaBoostClassifier(),
             param_grid={'algorithm': ['SAMME', 'SAMME.R'],
                         'learning_rate': array([1.00000000e-03, 2.15443469e-02, 4.64158883e-01, 1.00000000e+01]),
                         'n_estimators': array([ 10,  60, 110, 160, 210, 260])},
             scoring=make_scorer(<lambda>))
2023-09-27 19:00:45 - model - INFO - Accuracy: 0.2594702363998861
2023-09-27 19:00:46 - model - INFO - AUC-ROC: Not Applicable
2023-09-27 19:00:46 - model - INFO - Classification Report:
              precision    recall  f1-score   support

          -1       0.41      0.47      0.44      1457
           0       0.12      0.47      0.19       460
           1       0.70      0.00      0.01      1594

    accuracy                           0.26      3511
   macro avg       0.41      0.32      0.21      3511
weighted avg       0.50      0.26      0.21      3511

2023-09-27 19:00:46 - model - INFO - The AdaBoost Classifier model has been trained, evaluated 0.2594702363998861, and saved.
2023-09-27 19:04:41 - model - INFO - BayesSearchCV(cv=5, estimator=KNeighborsClassifier(),
              scoring=make_scorer(<lambda>),
              search_spaces={'algorithm': ['auto', 'ball_tree', 'kd_tree',
                                           'brute'],
                             'leaf_size': [30, 40, 50],
                             'n_neighbors': [3, 5, 11, 19], 'p': [1, 2],
                             'weights': ['uniform', 'distance']})
2023-09-27 19:04:41 - model - INFO - Model training successful.
2023-09-27 19:04:41 - model - INFO - the custom: parallelize search best params are OrderedDict([('algorithm', 'brute'), ('leaf_size', 40), ('n_neighbors', 19), ('p', 2), ('weights', 'uniform')])
2023-09-27 19:04:41 - model - INFO - the custom: parallelize search best score is 10.204
2023-09-27 19:04:41 - model - INFO - the custom: parallelize search best estimator is BayesSearchCV(cv=5, estimator=KNeighborsClassifier(),
              scoring=make_scorer(<lambda>),
              search_spaces={'algorithm': ['auto', 'ball_tree', 'kd_tree',
                                           'brute'],
                             'leaf_size': [30, 40, 50],
                             'n_neighbors': [3, 5, 11, 19], 'p': [1, 2],
                             'weights': ['uniform', 'distance']})
2023-09-27 19:04:42 - model - INFO - Accuracy: 0.5152378239817715
2023-09-27 19:04:42 - model - INFO - AUC-ROC: Not Applicable
2023-09-27 19:04:42 - model - INFO - Classification Report:
              precision    recall  f1-score   support

          -1       0.49      0.53      0.51      1406
           0       0.38      0.07      0.11       490
           1       0.54      0.64      0.59      1615

    accuracy                           0.52      3511
   macro avg       0.47      0.41      0.40      3511
weighted avg       0.50      0.52      0.49      3511

2023-09-27 19:04:42 - model - INFO - The K-Nearest Neighbors model has been trained, evaluated 0.5152378239817715, and saved.
2023-09-27 19:14:57 - model - INFO - machine learning model AdaBoost Classifier selected
2023-09-27 19:14:58 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 19:14:59 - model - INFO - machine learning model Gradient Boosting Regressor selected
2023-09-27 19:15:01 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 19:15:01 - model - INFO - machine learning model Gaussian Process Classifier selected
2023-09-27 19:15:03 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 19:15:03 - model - INFO - machine learning model Quadratic Discriminant Analysis selected
2023-09-27 19:15:03 - model - ERROR - Model training failed: Invalid dimension [1**2 * RBF(length_scale=1), 1**2 * Matern(length_scale=1, nu=1.5)]. Read the documentation for supported types.
2023-09-27 19:15:05 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 19:15:06 - model - INFO - machine learning model SGD Classifier selected
2023-09-27 19:15:08 - model - INFO - date
2020-01-01 00:00:00+00:00    1
2020-01-01 00:30:00+00:00    1
2020-01-01 01:00:00+00:00    1
2020-01-01 01:30:00+00:00    1
2020-01-01 02:00:00+00:00   -1
                            ..
2020-12-31 21:30:00+00:00    0
2020-12-31 22:00:00+00:00    0
2020-12-31 22:30:00+00:00    0
2020-12-31 23:00:00+00:00    0
2020-12-31 23:30:00+00:00    0
Name: label, Length: 17557, dtype: int32
2023-09-27 19:16:44 - model - ERROR - Exception occurred during model search: 'absolute error'
2023-09-27 19:18:11 - model - INFO - RandomizedSearchCV(cv=5, estimator=QuadraticDiscriminantAnalysis(),
                   param_distributions={'reg_param': array([0.]),
                                        'store_covariance': [True, False],
                                        'tol': array([0.001     , 0.00251189, 0.00630957, 0.01584893, 0.03981072,
       0.1       ])},
                   scoring=make_scorer(<lambda>))
2023-09-27 19:18:11 - model - INFO - Model training successful.
2023-09-27 19:18:11 - model - INFO - the custom: parallelize search best params are {'tol': 0.001, 'store_covariance': True, 'reg_param': 0.0}
2023-09-27 19:18:11 - model - INFO - the custom: parallelize search best score is 19.101999999999997
2023-09-27 19:18:11 - model - INFO - the custom: parallelize search best estimator is RandomizedSearchCV(cv=5, estimator=QuadraticDiscriminantAnalysis(),
                   param_distributions={'reg_param': array([0.]),
                                        'store_covariance': [True, False],
                                        'tol': array([0.001     , 0.00251189, 0.00630957, 0.01584893, 0.03981072,
       0.1       ])},
                   scoring=make_scorer(<lambda>))
2023-09-27 19:18:11 - model - INFO - Accuracy: 0.3172885217886642
2023-09-27 19:18:11 - model - INFO - AUC-ROC: Not Applicable
2023-09-27 19:18:11 - model - INFO - Classification Report:
              precision    recall  f1-score   support

          -1       0.47      0.00      0.01      1431
           0       0.16      0.53      0.24       477
           1       0.46      0.53      0.49      1603

    accuracy                           0.32      3511
   macro avg       0.36      0.36      0.25      3511
weighted avg       0.42      0.32      0.26      3511

2023-09-27 19:18:13 - model - INFO - The Quadratic Discriminant Analysis model has been trained, evaluated 0.3172885217886642, and saved.
2023-10-03 17:39:37 - model - INFO - Starting loading the models
2023-10-03 17:39:37 - model - INFO - loading the Main view model
2023-10-03 17:39:37 - model - INFO - loading the Trade tab model
2023-10-03 17:39:37 - model - INFO - loading the Exchange tab model
2023-10-03 17:39:37 - model - INFO - loading the Bot tab model
2023-10-03 17:39:37 - model - INFO - loading the Chart tab model
2023-10-03 17:39:37 - model - INFO - Finished loading the models
2023-10-03 17:45:59 - model - INFO - Starting loading the models
2023-10-03 17:45:59 - model - INFO - loading the Main view model
2023-10-03 17:45:59 - model - INFO - loading the Trade tab model
2023-10-03 17:45:59 - model - INFO - loading the Exchange tab model
2023-10-03 17:45:59 - model - INFO - loading the Bot tab model
2023-10-03 17:45:59 - model - INFO - loading the Chart tab model
2023-10-03 17:45:59 - model - INFO - Finished loading the models
2023-10-03 17:46:05 - model - INFO - machine learning model Linear Regression selected
2023-10-03 17:46:48 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-10-03 17:46:48 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-10-03 17:46:48 - model - INFO - Model training successful.
2023-10-03 17:46:48 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': False, 'n_jobs': -1}
2023-10-03 17:46:48 - model - INFO - the custom: parallelize search best score is -174.89009999999993
2023-10-03 17:46:48 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-10-03 17:46:48 - model - INFO - R2 Score: -5.778814695938379
2023-10-03 17:46:48 - model - INFO - Mean Absolute Error: 11166.842599312093
2023-10-03 17:46:48 - model - INFO - Mean Squared Error: 125174315.82319374
2023-10-03 17:46:48 - model - INFO - Root Mean Squared Error: 11188.132812189608
2023-10-03 17:46:48 - model - INFO - Explained Variance Score: 0.9742253523858272
2023-10-03 17:46:48 - model - INFO - The Linear Regression model has been trained, evaluated -5.778814695938379, and saved.
2023-10-03 17:50:21 - model - INFO - machine learning model Linear Regression selected
2023-10-03 17:51:08 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-10-03 17:51:08 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-10-03 17:51:08 - model - INFO - Model training successful.
2023-10-03 17:51:08 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1}
2023-10-03 17:51:08 - model - INFO - the custom: parallelize search best score is 5197.247300000001
2023-10-03 17:51:08 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-10-03 17:51:08 - model - INFO - R2 Score: 1.0
2023-10-03 17:51:08 - model - INFO - Mean Absolute Error: 4.356246417722641e-12
2023-10-03 17:51:08 - model - INFO - Mean Squared Error: 3.0485494028450043e-23
2023-10-03 17:51:08 - model - INFO - Root Mean Squared Error: 5.521367043445857e-12
2023-10-03 17:51:08 - model - INFO - Explained Variance Score: 1.0
2023-10-03 17:51:09 - model - INFO - The Linear Regression model has been trained, evaluated 1.0, and saved.
2023-10-03 17:51:25 - model - INFO - machine learning model Ridge Regression selected
2023-10-03 17:54:34 - model - INFO - GridSearchCV(cv=5, estimator=Ridge(),
             param_grid={'alpha': array([1.00000000e-03, 1.58489319e-02, 2.51188643e-01, 3.98107171e+00,
       6.30957344e+01, 1.00000000e+03]),
                         'fit_intercept': [True, False],
                         'max_iter': array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000]),
                         'positive': [False],
                         'solver': ['auto', 'svd', 'cholesky', 'lsqr',
                                    'sparse_cg', 'sag', 'saga'],
                         'tol': array([0.001     , 0.00464159, 0.02154435, 0.1       ])},
             scoring=make_scorer(<lambda>))
2023-10-03 17:54:34 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-10-03 17:54:34 - model - INFO - Model training successful.
2023-10-03 17:54:34 - model - INFO - the custom: parallelize search best params are {'alpha': 1000.0, 'fit_intercept': True, 'max_iter': 3000, 'positive': False, 'solver': 'sag', 'tol': 0.1}
2023-10-03 17:54:34 - model - INFO - the custom: parallelize search best score is 10524.859800000002
2023-10-03 17:54:34 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=Ridge(),
             param_grid={'alpha': array([1.00000000e-03, 1.58489319e-02, 2.51188643e-01, 3.98107171e+00,
       6.30957344e+01, 1.00000000e+03]),
                         'fit_intercept': [True, False],
                         'max_iter': array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000]),
                         'positive': [False],
                         'solver': ['auto', 'svd', 'cholesky', 'lsqr',
                                    'sparse_cg', 'sag', 'saga'],
                         'tol': array([0.001     , 0.00464159, 0.02154435, 0.1       ])},
             scoring=make_scorer(<lambda>))
2023-10-03 17:54:34 - model - INFO - R2 Score: 0.9940848966733429
2023-10-03 17:54:34 - model - INFO - Mean Absolute Error: 204.95620200343288
2023-10-03 17:54:34 - model - INFO - Mean Squared Error: 102154.93925385847
2023-10-03 17:54:34 - model - INFO - Root Mean Squared Error: 319.6168632188522
2023-10-03 17:54:34 - model - INFO - Explained Variance Score: 0.9940860237849555
2023-10-03 17:54:34 - model - INFO - The Ridge Regression model has been trained, evaluated 0.9940848966733429, and saved.
2023-10-03 17:59:24 - model - INFO - machine learning model Lasso Regression selected
2023-10-03 18:07:45 - model - INFO - RandomizedSearchCV(cv=5, estimator=Lasso(),
                   param_distributions={'alpha': array([1.00000000e-03, 1.58489319e-02, 2.51188643e-01, 3.98107171e+00,
       6.30957344e+01, 1.00000000e+03]),
                                        'fit_intercept': [True, False],
                                        'max_iter': array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000]),
                                        'positive': [True, False],
                                        'precompute': [True, False],
                                        'selection': ['cyclic', 'random'],
                                        'tol': array([0.001     , 0.00464159, 0.02154435, 0.1       ])},
                   scoring=make_scorer(<lambda>))
2023-10-03 18:07:45 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-10-03 18:07:45 - model - INFO - Model training successful.
2023-10-03 18:07:45 - model - INFO - the custom: parallelize search best params are {'tol': 0.001, 'selection': 'cyclic', 'precompute': False, 'positive': True, 'max_iter': 7000, 'fit_intercept': True, 'alpha': 1000.0}
2023-10-03 18:07:45 - model - INFO - the custom: parallelize search best score is 13618.274980000006
2023-10-03 18:07:45 - model - INFO - the custom: parallelize search best estimator is RandomizedSearchCV(cv=5, estimator=Lasso(),
                   param_distributions={'alpha': array([1.00000000e-03, 1.58489319e-02, 2.51188643e-01, 3.98107171e+00,
       6.30957344e+01, 1.00000000e+03]),
                                        'fit_intercept': [True, False],
                                        'max_iter': array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000]),
                                        'positive': [True, False],
                                        'precompute': [True, False],
                                        'selection': ['cyclic', 'random'],
                                        'tol': array([0.001     , 0.00464159, 0.02154435, 0.1       ])},
                   scoring=make_scorer(<lambda>))
2023-10-03 18:07:45 - model - INFO - R2 Score: 0.942277409534975
2023-10-03 18:07:45 - model - INFO - Mean Absolute Error: 709.7393005167709
2023-10-03 18:07:45 - model - INFO - Mean Squared Error: 1088222.788793805
2023-10-03 18:07:45 - model - INFO - Root Mean Squared Error: 1043.1791738689021
2023-10-03 18:07:45 - model - INFO - Explained Variance Score: 0.9423455816986159
2023-10-03 18:07:45 - model - INFO - The Lasso Regression model has been trained, evaluated 0.942277409534975, and saved.
2023-10-03 18:11:26 - model - INFO - machine learning model Elastic Net Regression selected
2023-10-03 18:37:51 - model - INFO - Starting loading the models
2023-10-03 18:37:51 - model - INFO - loading the Main view model
2023-10-03 18:37:51 - model - INFO - loading the Trade tab model
2023-10-03 18:37:51 - model - INFO - loading the Exchange tab model
2023-10-03 18:37:51 - model - INFO - loading the Bot tab model
2023-10-03 18:37:51 - model - INFO - loading the Chart tab model
2023-10-03 18:37:51 - model - INFO - Finished loading the models
2023-10-03 18:42:37 - model - INFO - Starting loading the models
2023-10-03 18:42:37 - model - INFO - loading the Main view model
2023-10-03 18:42:37 - model - INFO - loading the Trade tab model
2023-10-03 18:42:37 - model - INFO - loading the Exchange tab model
2023-10-03 18:42:37 - model - INFO - loading the Bot tab model
2023-10-03 18:42:37 - model - INFO - loading the Chart tab model
2023-10-03 18:42:37 - model - INFO - Finished loading the models
2023-10-03 18:42:41 - model - INFO - machine learning model Linear Regression selected
2023-10-03 18:43:21 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-10-03 18:43:21 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-10-03 18:43:21 - model - INFO - Model training successful.
2023-10-03 18:43:21 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1}
2023-10-03 18:43:21 - model - INFO - the custom: parallelize search best score is 0.0
2023-10-03 18:43:21 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-10-03 18:43:22 - model - INFO - R2 Score: 1.0
2023-10-03 18:43:22 - model - INFO - Mean Absolute Error: 3.787229219690348e-12
2023-10-03 18:43:22 - model - INFO - Mean Squared Error: 2.2442753303319068e-23
2023-10-03 18:43:22 - model - INFO - Root Mean Squared Error: 4.73737831541023e-12
2023-10-03 18:43:22 - model - INFO - Explained Variance Score: 1.0
2023-10-03 18:43:22 - model - INFO - The Linear Regression model has been trained, evaluated 1.0, and saved.
2023-10-03 18:49:19 - model - INFO - Starting loading the models
2023-10-03 18:49:19 - model - INFO - loading the Main view model
2023-10-03 18:49:19 - model - INFO - loading the Trade tab model
2023-10-03 18:49:19 - model - INFO - loading the Exchange tab model
2023-10-03 18:49:19 - model - INFO - loading the Bot tab model
2023-10-03 18:49:19 - model - INFO - loading the Chart tab model
2023-10-03 18:49:19 - model - INFO - Finished loading the models
2023-10-03 18:50:52 - model - INFO - machine learning model Linear Regression selected
2023-10-03 18:51:00 - model - INFO - machine learning model Logistic Regression selected
2023-10-03 18:51:01 - model - INFO - date
2020-01-01 00:00:00+00:00    0
2020-01-01 03:00:00+00:00    1
2020-01-01 06:00:00+00:00    0
2020-01-01 09:00:00+00:00   -1
2020-01-01 12:00:00+00:00   -1
                            ..
2020-12-31 09:00:00+00:00    0
2020-12-31 12:00:00+00:00    0
2020-12-31 15:00:00+00:00    0
2020-12-31 18:00:00+00:00    0
2020-12-31 21:00:00+00:00    0
Name: label, Length: 2927, dtype: int32
2023-10-03 18:51:04 - model - INFO - machine learning model Decision Tree Classifier selected
2023-10-03 18:51:04 - model - INFO - date
2020-01-01 00:00:00+00:00    0
2020-01-01 03:00:00+00:00    1
2020-01-01 06:00:00+00:00    0
2020-01-01 09:00:00+00:00   -1
2020-01-01 12:00:00+00:00   -1
                            ..
2020-12-31 09:00:00+00:00    0
2020-12-31 12:00:00+00:00    0
2020-12-31 15:00:00+00:00    0
2020-12-31 18:00:00+00:00    0
2020-12-31 21:00:00+00:00    0
Name: label, Length: 2927, dtype: int32
2023-10-03 18:52:11 - model - INFO - GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-10-03 18:52:12 - model - INFO - Feature importances saved to data/csv/feature_importances.csv
2023-10-03 18:52:12 - model - INFO - Model training successful.
2023-10-03 18:52:12 - model - INFO - the custom: parallelize search best params are {'copy_X': True, 'fit_intercept': False, 'n_jobs': -1}
2023-10-03 18:52:12 - model - INFO - the custom: parallelize search best score is 30.91703999999993
2023-10-03 18:52:12 - model - INFO - the custom: parallelize search best estimator is GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'copy_X': [True, False],
                         'fit_intercept': [True, False], 'n_jobs': [-1, 1]},
             scoring=make_scorer(<lambda>))
2023-10-03 18:52:12 - model - INFO - R2 Score: -6.788378016121552
2023-10-03 18:52:12 - model - INFO - Mean Absolute Error: 11134.413124286724
2023-10-03 18:52:12 - model - INFO - Mean Squared Error: 124162828.38505183
2023-10-03 18:52:12 - model - INFO - Root Mean Squared Error: 11142.83753740724
2023-10-03 18:52:12 - model - INFO - Explained Variance Score: 0.9882278260028176
2023-10-03 18:52:12 - model - INFO - The Linear Regression model has been trained, evaluated -6.788378016121552, and saved.
2023-10-07 13:51:10 - model - INFO - Starting loading the models
2023-10-07 13:51:10 - model - INFO - loading the Main view model
2023-10-07 13:51:10 - model - INFO - loading the Trade tab model
2023-10-07 13:52:08 - model - INFO - Starting loading the models
2023-10-07 13:52:08 - model - INFO - loading the Main view model
2023-10-07 13:52:08 - model - INFO - loading the Trade tab model
2023-10-07 13:52:08 - model - INFO - loading the Exchange tab model
2023-10-07 13:52:08 - model - INFO - loading the Bot tab model
2023-10-07 13:52:08 - model - INFO - loading the Chart tab model
2023-10-07 13:52:08 - model - INFO - loading the reinforcement tab model
2023-10-07 13:52:08 - model - INFO - Finished loading the models
2023-10-07 14:07:43 - model - INFO - Starting loading the models
2023-10-07 14:07:43 - model - INFO - loading the Main view model
2023-10-07 14:07:43 - model - INFO - loading the Trade tab model
2023-10-07 14:10:20 - model - INFO - Starting loading the models
2023-10-07 14:10:20 - model - INFO - loading the Main view model
2023-10-07 14:10:20 - model - INFO - loading the Trade tab model
2023-10-07 14:10:20 - model - INFO - loading the Exchange tab model
2023-10-07 14:10:20 - model - INFO - loading the Bot tab model
2023-10-07 14:10:20 - model - INFO - loading the Chart tab model
2023-10-07 14:10:20 - model - INFO - loading the reinforcement tab model
2023-10-07 14:10:20 - model - INFO - Finished loading the models
2023-10-07 14:11:08 - model - INFO - Starting loading the models
2023-10-07 14:11:08 - model - INFO - loading the Main view model
2023-10-07 14:11:08 - model - INFO - loading the Trade tab model
2023-10-07 14:11:08 - model - INFO - loading the Exchange tab model
2023-10-07 14:11:08 - model - INFO - loading the Bot tab model
2023-10-07 14:11:08 - model - INFO - loading the Chart tab model
2023-10-07 14:11:08 - model - INFO - loading the reinforcement tab model
2023-10-07 14:11:08 - model - INFO - Finished loading the models
2023-10-07 14:44:48 - model - INFO - Starting loading the models
2023-10-07 14:44:48 - model - INFO - loading the Main view model
2023-10-07 14:44:48 - model - INFO - loading the Trade tab model
2023-10-07 14:49:15 - model - INFO - Starting loading the models
2023-10-07 14:49:15 - model - INFO - loading the Main view model
2023-10-07 14:49:15 - model - INFO - loading the Trade tab model
2023-10-07 14:49:55 - model - INFO - Starting loading the models
2023-10-07 14:49:55 - model - INFO - loading the Main view model
2023-10-07 14:49:55 - model - INFO - loading the Trade tab model
2023-10-07 14:49:55 - model - INFO - loading the Exchange tab model
2023-10-07 14:49:55 - model - INFO - loading the Bot tab model
2023-10-07 14:49:55 - model - INFO - loading the Chart tab model
2023-10-07 14:49:55 - model - INFO - loading the reinforcement tab model
2023-10-07 14:49:55 - model - INFO - Finished loading the models
2023-10-07 14:50:36 - model - INFO - Starting loading the models
2023-10-07 14:50:36 - model - INFO - loading the Main view model
2023-10-07 14:50:36 - model - INFO - loading the Trade tab model
2023-10-07 14:50:36 - model - INFO - loading the Exchange tab model
2023-10-07 14:50:36 - model - INFO - loading the Bot tab model
2023-10-07 14:50:36 - model - INFO - loading the Chart tab model
2023-10-07 14:50:36 - model - INFO - loading the reinforcement tab model
2023-10-07 14:50:36 - model - INFO - Finished loading the models
2023-10-07 14:53:00 - model - INFO - Starting loading the models
2023-10-07 14:53:00 - model - INFO - loading the Main view model
2023-10-07 14:53:00 - model - INFO - loading the Trade tab model
2023-10-07 14:53:00 - model - INFO - loading the Exchange tab model
2023-10-07 14:53:00 - model - INFO - loading the Bot tab model
2023-10-07 14:53:00 - model - INFO - loading the Chart tab model
2023-10-07 14:53:00 - model - INFO - loading the reinforcement tab model
2023-10-07 14:53:00 - model - INFO - Finished loading the models
2023-10-07 14:54:15 - model - INFO - Starting loading the models
2023-10-07 14:54:15 - model - INFO - loading the Main view model
2023-10-07 14:54:15 - model - INFO - loading the Trade tab model
2023-10-07 14:54:15 - model - INFO - loading the Exchange tab model
2023-10-07 14:54:15 - model - INFO - loading the Bot tab model
2023-10-07 14:54:15 - model - INFO - loading the Chart tab model
2023-10-07 14:54:15 - model - INFO - loading the reinforcement tab model
2023-10-07 14:54:15 - model - INFO - Finished loading the models
2023-10-07 14:55:31 - model - INFO - Starting loading the models
2023-10-07 14:55:31 - model - INFO - loading the Main view model
2023-10-07 14:55:31 - model - INFO - loading the Trade tab model
2023-10-07 14:55:31 - model - INFO - loading the Exchange tab model
2023-10-07 14:55:31 - model - INFO - loading the Bot tab model
2023-10-07 14:55:31 - model - INFO - loading the Chart tab model
2023-10-07 14:55:31 - model - INFO - loading the reinforcement tab model
2023-10-07 14:55:31 - model - INFO - Finished loading the models
2023-10-07 14:55:54 - model - INFO - Starting loading the models
2023-10-07 14:55:54 - model - INFO - loading the Main view model
2023-10-07 14:55:54 - model - INFO - loading the Trade tab model
2023-10-07 14:55:54 - model - INFO - loading the Exchange tab model
2023-10-07 14:55:54 - model - INFO - loading the Bot tab model
2023-10-07 14:55:54 - model - INFO - loading the Chart tab model
2023-10-07 14:55:54 - model - INFO - loading the reinforcement tab model
2023-10-07 14:55:54 - model - INFO - Finished loading the models
2023-10-07 15:13:16 - model - INFO - Starting loading the models
2023-10-07 15:13:16 - model - INFO - loading the Main view model
2023-10-07 15:13:16 - model - INFO - loading the Trade tab model
2023-10-07 15:13:16 - model - INFO - loading the Exchange tab model
2023-10-07 15:13:16 - model - INFO - loading the Bot tab model
2023-10-07 15:13:16 - model - INFO - loading the Chart tab model
2023-10-07 15:13:16 - model - INFO - loading the reinforcement tab model
2023-10-07 15:13:16 - model - INFO - Finished loading the models
2023-10-07 15:15:12 - model - INFO - Starting loading the models
2023-10-07 15:15:12 - model - INFO - loading the Main view model
2023-10-07 15:15:12 - model - INFO - loading the Trade tab model
2023-10-07 15:15:12 - model - INFO - loading the Exchange tab model
2023-10-07 15:15:12 - model - INFO - loading the Bot tab model
2023-10-07 15:15:12 - model - INFO - loading the Chart tab model
2023-10-07 15:15:12 - model - INFO - loading the reinforcement tab model
2023-10-07 15:15:12 - model - INFO - Finished loading the models
2023-10-07 15:30:51 - model - INFO - Starting loading the models
2023-10-07 15:30:51 - model - INFO - loading the Main view model
2023-10-07 15:30:51 - model - INFO - loading the Trade tab model
2023-10-07 15:30:51 - model - INFO - loading the Exchange tab model
2023-10-07 15:30:51 - model - INFO - loading the Bot tab model
2023-10-07 15:30:51 - model - INFO - loading the Chart tab model
2023-10-07 15:30:51 - model - INFO - loading the reinforcement tab model
2023-10-07 15:30:51 - model - INFO - Finished loading the models
2023-10-07 15:32:30 - model - INFO - Starting loading the models
2023-10-07 15:32:30 - model - INFO - loading the Main view model
2023-10-07 15:32:30 - model - INFO - loading the Trade tab model
2023-10-07 15:32:30 - model - INFO - loading the Exchange tab model
2023-10-07 15:32:30 - model - INFO - loading the Bot tab model
2023-10-07 15:32:30 - model - INFO - loading the Chart tab model
2023-10-07 15:32:30 - model - INFO - loading the reinforcement tab model
2023-10-07 15:32:30 - model - INFO - Finished loading the models
2023-10-07 15:34:35 - model - INFO - Starting loading the models
2023-10-07 15:34:35 - model - INFO - loading the Main view model
2023-10-07 15:34:35 - model - INFO - loading the Trade tab model
2023-10-07 15:34:35 - model - INFO - loading the Exchange tab model
2023-10-07 15:34:35 - model - INFO - loading the Bot tab model
2023-10-07 15:34:35 - model - INFO - loading the Chart tab model
2023-10-07 15:34:35 - model - INFO - loading the reinforcement tab model
2023-10-07 15:34:35 - model - INFO - Finished loading the models
2023-10-07 15:36:03 - model - INFO - Starting loading the models
2023-10-07 15:36:03 - model - INFO - loading the Main view model
2023-10-07 15:36:03 - model - INFO - loading the Trade tab model
2023-10-07 15:36:03 - model - INFO - loading the Exchange tab model
2023-10-07 15:36:03 - model - INFO - loading the Bot tab model
2023-10-07 15:36:03 - model - INFO - loading the Chart tab model
2023-10-07 15:36:03 - model - INFO - loading the reinforcement tab model
2023-10-07 15:36:03 - model - INFO - Finished loading the models
2023-10-07 15:38:56 - model - INFO - Starting loading the models
2023-10-07 15:38:56 - model - INFO - loading the Main view model
2023-10-07 15:38:56 - model - INFO - loading the Trade tab model
2023-10-07 15:39:17 - model - INFO - Starting loading the models
2023-10-07 15:39:17 - model - INFO - loading the Main view model
2023-10-07 15:39:17 - model - INFO - loading the Trade tab model
2023-10-07 15:39:17 - model - INFO - loading the Exchange tab model
2023-10-07 15:39:17 - model - INFO - loading the Bot tab model
2023-10-07 15:39:17 - model - INFO - loading the Chart tab model
2023-10-07 15:39:17 - model - INFO - loading the reinforcement tab model
2023-10-07 15:39:17 - model - INFO - Finished loading the models
2023-10-07 15:40:21 - model - INFO - Starting loading the models
2023-10-07 15:40:21 - model - INFO - loading the Main view model
2023-10-07 15:40:21 - model - INFO - loading the Trade tab model
2023-10-07 15:40:21 - model - INFO - loading the Exchange tab model
2023-10-07 15:40:21 - model - INFO - loading the Bot tab model
2023-10-07 15:40:21 - model - INFO - loading the Chart tab model
2023-10-07 15:40:21 - model - INFO - loading the reinforcement tab model
2023-10-07 15:40:21 - model - INFO - Finished loading the models
2023-10-07 16:29:21 - model - INFO - Starting loading the models
2023-10-07 16:29:21 - model - INFO - loading the Main view model
2023-10-07 16:29:21 - model - INFO - loading the Trade tab model
2023-10-07 16:29:21 - model - INFO - loading the Exchange tab model
2023-10-07 16:29:21 - model - INFO - loading the Bot tab model
2023-10-07 16:29:21 - model - INFO - loading the Chart tab model
2023-10-07 16:29:21 - model - INFO - loading the reinforcement tab model
2023-10-07 16:29:21 - model - INFO - Finished loading the models
2023-10-07 16:33:22 - model - INFO - Starting loading the models
2023-10-07 16:33:22 - model - INFO - loading the Main view model
2023-10-07 16:33:22 - model - INFO - loading the Trade tab model
2023-10-07 16:33:22 - model - INFO - loading the Exchange tab model
2023-10-07 16:33:22 - model - INFO - loading the Bot tab model
2023-10-07 16:33:22 - model - INFO - loading the Chart tab model
2023-10-07 16:33:22 - model - INFO - loading the reinforcement tab model
2023-10-07 16:33:22 - model - INFO - Finished loading the models
2023-10-07 16:33:48 - model - INFO - Starting loading the models
2023-10-07 16:33:48 - model - INFO - loading the Main view model
2023-10-07 16:33:48 - model - INFO - loading the Trade tab model
2023-10-07 16:33:48 - model - INFO - loading the Exchange tab model
2023-10-07 16:33:48 - model - INFO - loading the Bot tab model
2023-10-07 16:33:48 - model - INFO - loading the Chart tab model
2023-10-07 16:33:48 - model - INFO - loading the reinforcement tab model
2023-10-07 16:33:48 - model - INFO - Finished loading the models
2023-10-07 16:38:36 - model - INFO - Starting loading the models
2023-10-07 16:38:36 - model - INFO - loading the Main view model
2023-10-07 16:38:36 - model - INFO - loading the Trade tab model
2023-10-07 16:38:36 - model - INFO - loading the Exchange tab model
2023-10-07 16:38:36 - model - INFO - loading the Bot tab model
2023-10-07 16:38:36 - model - INFO - loading the Chart tab model
2023-10-07 16:38:36 - model - INFO - loading the reinforcement tab model
2023-10-07 16:38:36 - model - INFO - Finished loading the models
2023-10-07 16:39:35 - model - INFO - Starting loading the models
2023-10-07 16:39:35 - model - INFO - loading the Main view model
2023-10-07 16:39:35 - model - INFO - loading the Trade tab model
2023-10-07 16:39:35 - model - INFO - loading the Exchange tab model
2023-10-07 16:39:35 - model - INFO - loading the Bot tab model
2023-10-07 16:39:35 - model - INFO - loading the Chart tab model
2023-10-07 16:39:35 - model - INFO - loading the reinforcement tab model
2023-10-07 16:39:35 - model - INFO - Finished loading the models
2023-10-07 16:39:53 - model - INFO - Starting loading the models
2023-10-07 16:39:53 - model - INFO - loading the Main view model
2023-10-07 16:39:53 - model - INFO - loading the Trade tab model
2023-10-07 16:39:53 - model - INFO - loading the Exchange tab model
2023-10-07 16:39:53 - model - INFO - loading the Bot tab model
2023-10-07 16:39:53 - model - INFO - loading the Chart tab model
2023-10-07 16:39:53 - model - INFO - loading the reinforcement tab model
2023-10-07 16:39:53 - model - INFO - Finished loading the models
2023-10-07 16:41:07 - model - INFO - Starting loading the models
2023-10-07 16:41:07 - model - INFO - loading the Main view model
2023-10-07 16:41:07 - model - INFO - loading the Trade tab model
2023-10-07 16:41:07 - model - INFO - loading the Exchange tab model
2023-10-07 16:41:07 - model - INFO - loading the Bot tab model
2023-10-07 16:41:07 - model - INFO - loading the Chart tab model
2023-10-07 16:41:07 - model - INFO - loading the reinforcement tab model
2023-10-07 16:41:07 - model - INFO - Finished loading the models
2023-10-07 16:44:41 - model - INFO - Starting loading the models
2023-10-07 16:44:41 - model - INFO - loading the Main view model
2023-10-07 16:44:41 - model - INFO - loading the Trade tab model
2023-10-07 16:44:41 - model - INFO - loading the Exchange tab model
2023-10-07 16:44:41 - model - INFO - loading the Bot tab model
2023-10-07 16:44:41 - model - INFO - loading the Chart tab model
2023-10-07 16:44:41 - model - INFO - loading the reinforcement tab model
2023-10-07 16:44:41 - model - INFO - Finished loading the models
2023-10-07 16:45:03 - model - INFO - Starting loading the models
2023-10-07 16:45:03 - model - INFO - loading the Main view model
2023-10-07 16:45:03 - model - INFO - loading the Trade tab model
2023-10-07 16:45:03 - model - INFO - loading the Exchange tab model
2023-10-07 16:45:03 - model - INFO - loading the Bot tab model
2023-10-07 16:45:03 - model - INFO - loading the Chart tab model
2023-10-07 16:45:03 - model - INFO - loading the reinforcement tab model
2023-10-07 16:45:03 - model - INFO - Finished loading the models
2023-10-07 16:48:02 - model - INFO - Starting loading the models
2023-10-07 16:48:02 - model - INFO - loading the Main view model
2023-10-07 16:48:02 - model - INFO - loading the Trade tab model
2023-10-07 16:48:02 - model - INFO - loading the Exchange tab model
2023-10-07 16:48:02 - model - INFO - loading the Bot tab model
2023-10-07 16:48:02 - model - INFO - loading the Chart tab model
2023-10-07 16:48:02 - model - INFO - loading the reinforcement tab model
2023-10-07 16:48:02 - model - INFO - Finished loading the models
2023-10-07 16:48:59 - model - INFO - Starting loading the models
2023-10-07 16:48:59 - model - INFO - loading the Main view model
2023-10-07 16:48:59 - model - INFO - loading the Trade tab model
2023-10-07 16:48:59 - model - INFO - loading the Exchange tab model
2023-10-07 16:48:59 - model - INFO - loading the Bot tab model
2023-10-07 16:48:59 - model - INFO - loading the Chart tab model
2023-10-07 16:48:59 - model - INFO - loading the reinforcement tab model
2023-10-07 16:48:59 - model - INFO - Finished loading the models
2023-10-07 16:51:05 - model - INFO - Starting loading the models
2023-10-07 16:51:05 - model - INFO - loading the Main view model
2023-10-07 16:51:05 - model - INFO - loading the Trade tab model
2023-10-07 16:51:05 - model - INFO - loading the Exchange tab model
2023-10-07 16:51:05 - model - INFO - loading the Bot tab model
2023-10-07 16:51:05 - model - INFO - loading the Chart tab model
2023-10-07 16:51:05 - model - INFO - loading the reinforcement tab model
2023-10-07 16:51:05 - model - INFO - Finished loading the models
2023-10-07 16:54:49 - model - INFO - Starting loading the models
2023-10-07 16:54:49 - model - INFO - loading the Main view model
2023-10-07 16:54:49 - model - INFO - loading the Trade tab model
2023-10-07 16:54:49 - model - INFO - loading the Exchange tab model
2023-10-07 16:54:49 - model - INFO - loading the Bot tab model
2023-10-07 16:54:49 - model - INFO - loading the Chart tab model
2023-10-07 16:54:49 - model - INFO - loading the reinforcement tab model
2023-10-07 16:54:49 - model - INFO - Finished loading the models
2023-10-07 16:56:10 - model - INFO - Starting loading the models
2023-10-07 16:56:10 - model - INFO - loading the Main view model
2023-10-07 16:56:10 - model - INFO - loading the Trade tab model
2023-10-07 16:56:10 - model - INFO - loading the Exchange tab model
2023-10-07 16:56:10 - model - INFO - loading the Bot tab model
2023-10-07 16:56:10 - model - INFO - loading the Chart tab model
2023-10-07 16:56:10 - model - INFO - loading the reinforcement tab model
2023-10-07 16:56:10 - model - INFO - Finished loading the models
2023-10-07 16:58:33 - model - INFO - Starting loading the models
2023-10-07 16:58:33 - model - INFO - loading the Main view model
2023-10-07 16:58:33 - model - INFO - loading the Trade tab model
2023-10-07 16:58:33 - model - INFO - loading the Exchange tab model
2023-10-07 16:58:33 - model - INFO - loading the Bot tab model
2023-10-07 16:58:33 - model - INFO - loading the Chart tab model
2023-10-07 16:58:33 - model - INFO - loading the reinforcement tab model
2023-10-07 16:58:33 - model - INFO - Finished loading the models
2023-10-08 01:48:09 - model - INFO - Starting loading the models
2023-10-08 01:48:09 - model - INFO - loading the Main view model
2023-10-08 01:48:09 - model - INFO - loading the Trade tab model
2023-10-08 01:48:09 - model - INFO - loading the Exchange tab model
2023-10-08 01:48:09 - model - INFO - loading the Bot tab model
2023-10-08 01:48:09 - model - INFO - loading the Chart tab model
2023-10-08 01:48:09 - model - INFO - loading the reinforcement tab model
2023-10-08 01:48:09 - model - INFO - Finished loading the models
2023-10-08 01:59:54 - model - INFO - Starting loading the models
2023-10-08 01:59:54 - model - INFO - loading the Main view model
2023-10-08 01:59:54 - model - INFO - loading the Trade tab model
2023-10-08 01:59:54 - model - INFO - loading the Exchange tab model
2023-10-08 01:59:54 - model - INFO - loading the Bot tab model
2023-10-08 01:59:54 - model - INFO - loading the Chart tab model
2023-10-08 01:59:54 - model - INFO - loading the reinforcement tab model
2023-10-08 01:59:54 - model - INFO - Finished loading the models
2023-10-08 02:03:00 - model - INFO - Starting loading the models
2023-10-08 02:03:00 - model - INFO - loading the Main view model
2023-10-08 02:03:00 - model - INFO - loading the Trade tab model
2023-10-08 02:03:00 - model - INFO - loading the Exchange tab model
2023-10-08 02:03:00 - model - INFO - loading the Bot tab model
2023-10-08 02:03:00 - model - INFO - loading the Chart tab model
2023-10-08 02:03:00 - model - INFO - loading the reinforcement tab model
2023-10-08 02:03:00 - model - INFO - Finished loading the models
2023-10-08 02:03:40 - model - INFO - Starting loading the models
2023-10-08 02:03:40 - model - INFO - loading the Main view model
2023-10-08 02:03:40 - model - INFO - loading the Trade tab model
2023-10-08 02:03:40 - model - INFO - loading the Exchange tab model
2023-10-08 02:03:40 - model - INFO - loading the Bot tab model
2023-10-08 02:03:40 - model - INFO - loading the Chart tab model
2023-10-08 02:03:40 - model - INFO - loading the reinforcement tab model
2023-10-08 02:03:40 - model - INFO - Finished loading the models
2023-10-08 02:06:38 - model - INFO - Starting loading the models
2023-10-08 02:06:38 - model - INFO - loading the Main view model
2023-10-08 02:06:38 - model - INFO - loading the Trade tab model
2023-10-08 02:06:38 - model - INFO - loading the Exchange tab model
2023-10-08 02:06:38 - model - INFO - loading the Bot tab model
2023-10-08 02:06:38 - model - INFO - loading the Chart tab model
2023-10-08 02:06:38 - model - INFO - loading the reinforcement tab model
2023-10-08 02:06:38 - model - INFO - Finished loading the models
2023-10-08 02:07:34 - model - INFO - Starting loading the models
2023-10-08 02:07:34 - model - INFO - loading the Main view model
2023-10-08 02:07:34 - model - INFO - loading the Trade tab model
2023-10-08 02:07:34 - model - INFO - loading the Exchange tab model
2023-10-08 02:07:34 - model - INFO - loading the Bot tab model
2023-10-08 02:07:34 - model - INFO - loading the Chart tab model
2023-10-08 02:07:34 - model - INFO - loading the reinforcement tab model
2023-10-08 02:07:34 - model - INFO - Finished loading the models
2023-10-08 02:08:23 - model - INFO - Starting loading the models
2023-10-08 02:08:23 - model - INFO - loading the Main view model
2023-10-08 02:08:23 - model - INFO - loading the Trade tab model
2023-10-08 02:08:23 - model - INFO - loading the Exchange tab model
2023-10-08 02:08:23 - model - INFO - loading the Bot tab model
2023-10-08 02:08:23 - model - INFO - loading the Chart tab model
2023-10-08 02:08:23 - model - INFO - loading the reinforcement tab model
2023-10-08 02:08:23 - model - INFO - Finished loading the models
2023-10-08 02:10:44 - model - INFO - Starting loading the models
2023-10-08 02:10:44 - model - INFO - loading the Main view model
2023-10-08 02:10:44 - model - INFO - loading the Trade tab model
2023-10-08 02:10:44 - model - INFO - loading the Exchange tab model
2023-10-08 02:10:44 - model - INFO - loading the Bot tab model
2023-10-08 02:10:44 - model - INFO - loading the Chart tab model
2023-10-08 02:10:44 - model - INFO - loading the reinforcement tab model
2023-10-08 02:10:44 - model - INFO - Finished loading the models
2023-10-08 02:11:48 - model - INFO - Starting loading the models
2023-10-08 02:11:48 - model - INFO - loading the Main view model
2023-10-08 02:11:48 - model - INFO - loading the Trade tab model
2023-10-08 02:11:48 - model - INFO - loading the Exchange tab model
2023-10-08 02:11:48 - model - INFO - loading the Bot tab model
2023-10-08 02:11:48 - model - INFO - loading the Chart tab model
2023-10-08 02:11:48 - model - INFO - loading the reinforcement tab model
2023-10-08 02:11:48 - model - INFO - Finished loading the models
2023-10-08 02:13:45 - model - INFO - Starting loading the models
2023-10-08 02:13:45 - model - INFO - loading the Main view model
2023-10-08 02:13:45 - model - INFO - loading the Trade tab model
2023-10-08 02:13:45 - model - INFO - loading the Exchange tab model
2023-10-08 02:13:45 - model - INFO - loading the Bot tab model
2023-10-08 02:13:45 - model - INFO - loading the Chart tab model
2023-10-08 02:13:45 - model - INFO - loading the reinforcement tab model
2023-10-08 02:13:45 - model - INFO - Finished loading the models
2023-10-08 02:14:03 - model - INFO - Creating a auto trading bot Autobot-Phemex: BTC/USDT-1m-LinearRegression(n_jobs=-1)- Trades: 0 -> 
2023-10-08 02:15:14 - model - INFO - Starting loading the models
2023-10-08 02:15:14 - model - INFO - loading the Main view model
2023-10-08 02:15:14 - model - INFO - loading the Trade tab model
2023-10-08 02:15:14 - model - INFO - loading the Exchange tab model
2023-10-08 02:15:14 - model - INFO - loading the Bot tab model
2023-10-08 02:15:14 - model - INFO - loading the Chart tab model
2023-10-08 02:15:14 - model - INFO - loading the reinforcement tab model
2023-10-08 02:15:14 - model - INFO - Finished loading the models
2023-10-08 02:15:29 - model - INFO - Creating a auto trading bot Autobot-Phemex: BTC/USDT-1m-LinearRegression(n_jobs=-1)- Trades: 0 -> 
2023-10-08 02:15:37 - model - INFO - Creating a new thread for index 0
2023-10-08 02:15:37 - model - INFO - Starting a auto trading bot Autobot-Phemex: BTC/USDT-1m-LinearRegression(n_jobs=-1)- Trades: 0 -> 
2023-10-08 02:17:10 - model - ERROR - there is no bot to stop! 
2023-10-08 02:17:14 - model - ERROR - there is no bot to stop! 
2023-10-08 02:17:16 - model - ERROR - there is no bot to stop! 
2023-10-08 02:17:23 - model - ERROR - Index 0 is out of bounds.
2023-10-08 02:17:29 - model - INFO - Creating a auto trading bot Autobot-Phemex: BTC/USDT-1m-LinearRegression(n_jobs=-1)- Trades: 0 -> 
2023-10-08 02:17:34 - model - ERROR - Index 1 is out of bounds.
2023-10-08 02:17:39 - model - INFO - Creating a new thread for index 0
2023-10-08 02:17:39 - model - INFO - Starting a auto trading bot Autobot-Phemex: BTC/USDT-1m-LinearRegression(n_jobs=-1)- Trades: 0 -> 
2023-10-08 02:17:49 - model - ERROR - there is no bot to stop! 
2023-10-08 02:17:53 - model - ERROR - there is no bot to stop! 
